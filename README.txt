1115201800186
Στειροπούλου Ευαγγελία

Το πρόγραμμα είναι γραμμένο σε γλώσσα C++.
Το πρόγραμμα ξεκινάει από το ./program το οποίο ενεργοποιεί τις διεργασίες G και Μ.

Οι παράμετροι του προγράμματος είναι: D, lo, hi, t, T, S και ένας ακέραιος. 
1-> για την εκτέλεση του προγράμματος με best fit
2-> για την εκτέλεση του προγράμματος με worst fit
3-> για την εκτέλεση του προγράμματος με buddy algorithm

Για κάθε εκτέλεση εκτυπώνονται αντίστοιχα αποτελέσματα στο ανάλογο log file.

Η παράμετρος S του προγράμματος που αποτελεί το μέγεθος της μνήμης πρέπει ΥΠΟΧΡΕΩΤΙΚΑ να είναι δύναμη του 2,
προκειμένου να λειτουργεί σωστά ο αλγόριθμος Buddy.

Η μνήμη για τους αλγοριθμους best/worst fit , αναπαρίσταται με τη χρήση διπλά συνδεδεμένης λίστας. 
Το μέγεθος της μνήμης καθορίζεται από τη παράμετρο S που δίνεται κατά την αρχή του προγράμματος.
Θεωρώ πως η μνήμη αρχίζει από τη θέση 0 και τελειώνει στη θέση S-1.
Τα Process id αρχίζουν από τον αριθμό 45672(τυχαία επιλογή) και αυξάνονται κατά ένα, ανά διεργασία.

Ο αλγόριθμος Buddy υλοποιείται με τη χρήση δυαδικού δέντρου.

Η λίστα L ονομάζεται Pending_Processes_List και είναι μια απλά συνδεδεμένη λίστα με δείκτες head/tail. 
Αναπαριστά μια ουρά(FIFO). Οι νέες διεργασίες προστίθεται (add_process) στο τέλος (tail), 
και απομακρύνονται (pop_process) από την αρχή (head). 
Η δέσμευση της μνήμης για τις διεργασίες γίνεται εξωτερικά, 
και κατά την απομάκρυνση από τη συγκεκριμένη λίστα δε γίνεται απελευθέρωση της μνήμης. 
Η διαγραφή της διεργασίας, γίνεται μετά το πέρας της ζωής της και κατά την απομάκρυνσή της από την μνήμη(Memory_List).

Οι αλγόριθμοι Best/Worst Fit επιστρέφουν τον κόμβο Memory_List_Node 
που βρίσκεται ακριβώς πριν την θέση μνήμης στην οποία θα τοποθετηθεί το εκάστοτε
process, αν η λίστα δεν είναι κενή. Αν είναι κενή, 
δεσμεύουν χώρο και τοποθετούν την διεργασία απευθείας στη μνήμη
(επιστρέφουν την κεφαλή της Memory_List).
Αν δεν υπάρχει χώρος επιστρέφουν NULL.
Ο χώρος που καταλαμβάνει η διεργασία στη μνήμη είναι χ+μέγεθος-1.
Τα κενά στην μνήμη προκύπτουν από x' - y - 1
(αρχή διεργασίας που υπάρχει μετά το κενό - τέλος διεργασίας πριν το κενό - 1).


Για την επικοινωνία μεταξύ των G - M: Έχει γίνει χρήση του κώδικα
της προηγούμενης εργασίας, και χρησιμοποιούνται σημαφόροι και shared memory segment. 
Η G στέλνει τα στοιχεία κάθε διεργασίας στην Μ και από κει γίνεται 
τοποθέτηση στην μνήμη ή στην L. 

Η προσομοίωση σταματά όταν μηδενιστεί ο χρόνος D, και το πρόγραμμα τερματίζει. Καθορίζεται από την G, 
και η Μ ενημερώνεται με το μήνυμα "$".


Το log file περιλαμβάνει: Τις διεργασίες που έχουν τερματιστεί, με τα ανάλογα στοιχεία τους, την εικόνα της μνήμης τη στιγμή που τερματίζει η προσομοίωση, και την εικόνα της pending list τη στιγμή τερματισμού.

Για την γέννηση των διεργασιών από την G έγινε χρήση των δεδομένων/κατανομών που υποδείκνυε η εκφώνηση.

Δεδομένου ότι δεν πρόλαβα να υπολοποιήσω την εκτύπωση του δυαδικού δέντρου στο log file εκτυπώνω 
το δέντρο στο output. 

Επίσης δεν έχω υλοποιήσει την *αυτόματη* απομάκρυνση των διεργασιών από την μνήμη μετά το πέρας της ζωής τους για τον αλγόριθμο buddy, αλλά οι συναρτήσεις διαγραφής που απομακρύνουν τους κόμβους από το δέντρο, και η συνάρτηση που τοποθετεί στη μνήμη pending processes από την L, έχουν υλοποιηθεί και λειτουργούν επιτυχώς.(λειτουργούν γενικά αλλά δεν έχω καταφέρει να τα εντάξω στην Μ. 

Σύμφωνα με τις προσομοιώσεις που εκτέλεσα, κατέληξα στο συμπέρασμα ότι οι αλγόριθμοι best/worst fit είναι ισάξιοι και αποδοτικότεροι του buddy algorithm.






